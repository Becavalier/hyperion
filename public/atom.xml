<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>曜彤.手记</title>
  <icon>https://www.hangyu.site/images/rss.png</icon>
  <subtitle>YHSPY</subtitle>
  <link href="https://www.hangyu.site/atom.xml" rel="self"/>
  
  <link href="https://www.hangyu.site/"/>
  <updated>2025-04-21T06:40:42.503Z</updated>
  <id>https://www.hangyu.site/</id>
  
  <author>
    <name>于航（Jason Yu）</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>自用算法模版（C++）</title>
    <link href="https://www.hangyu.site/2025/04/08/%E8%87%AA%E7%94%A8%E7%AE%97%E6%B3%95%E6%A8%A1%E7%89%88/"/>
    <id>https://www.hangyu.site/2025/04/08/%E8%87%AA%E7%94%A8%E7%AE%97%E6%B3%95%E6%A8%A1%E7%89%88/</id>
    <published>2025-04-08T02:34:00.000Z</published>
    <updated>2025-04-21T06:40:42.503Z</updated>
    
    
    <summary type="html">自用算法模版（C++）。</summary>
    
    
    
    
    <category term="算法" scheme="https://www.hangyu.site/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="Algorithm" scheme="https://www.hangyu.site/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>TypeScript 类型体操练习册</title>
    <link href="https://www.hangyu.site/2025/04/01/TypeScript-%E7%B1%BB%E5%9E%8B%E4%BD%93%E6%93%8D%E7%BB%83%E4%B9%A0%E5%86%8C/"/>
    <id>https://www.hangyu.site/2025/04/01/TypeScript-%E7%B1%BB%E5%9E%8B%E4%BD%93%E6%93%8D%E7%BB%83%E4%B9%A0%E5%86%8C/</id>
    <published>2025-04-01T09:55:00.000Z</published>
    <updated>2025-04-03T12:53:36.200Z</updated>
    
    
    <summary type="html">TypeScript 类型体操练习册</summary>
    
    
    
    
    <category term="TypeScript" scheme="https://www.hangyu.site/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>《Unix 环境高级编程（第三版）》读书笔记（第 6-10 章）</title>
    <link href="https://www.hangyu.site/2024/02/11/%E3%80%8AUnix-%E7%8E%AF%E5%A2%83%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%EF%BC%88%E7%AC%AC3%E7%89%88%EF%BC%89%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E7%AC%AC-6-10-%E7%AB%A0%EF%BC%89/"/>
    <id>https://www.hangyu.site/2024/02/11/%E3%80%8AUnix-%E7%8E%AF%E5%A2%83%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%EF%BC%88%E7%AC%AC3%E7%89%88%EF%BC%89%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E7%AC%AC-6-10-%E7%AB%A0%EF%BC%89/</id>
    <published>2024-02-11T14:18:00.000Z</published>
    <updated>2025-03-31T07:59:32.024Z</updated>
    
    
    <summary type="html">继续整理书架上的经典老书。</summary>
    
    
    
    
    <category term="Unix" scheme="https://www.hangyu.site/tags/Unix/"/>
    
  </entry>
  
  <entry>
    <title>《Operating Systems: Three Easy Pieces》读书笔记（第 44-51 章）</title>
    <link href="https://www.hangyu.site/2024/01/24/%E3%80%8AOperating-Systems-Three-Easy-Pieces%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E7%AC%AC-44-51-%E7%AB%A0%EF%BC%89/"/>
    <id>https://www.hangyu.site/2024/01/24/%E3%80%8AOperating-Systems-Three-Easy-Pieces%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E7%AC%AC-44-51-%E7%AB%A0%EF%BC%89/</id>
    <published>2024-01-24T05:54:00.000Z</published>
    <updated>2025-03-31T07:59:32.011Z</updated>
    
    
    <summary type="html">书接上回，本文是第 44-51 章的笔记。内容基于自身情况记录，仅供参考，Dialogue 的相关章节已略过。</summary>
    
    
    
    
    <category term="OS" scheme="https://www.hangyu.site/tags/OS/"/>
    
    <category term="操作系统" scheme="https://www.hangyu.site/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>《Operating Systems: Three Easy Pieces》读书笔记（第 39-43 章）</title>
    <link href="https://www.hangyu.site/2024/01/17/%E3%80%8AOperating-Systems-Three-Easy-Pieces%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E7%AC%AC-39-43-%E7%AB%A0%EF%BC%89/"/>
    <id>https://www.hangyu.site/2024/01/17/%E3%80%8AOperating-Systems-Three-Easy-Pieces%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E7%AC%AC-39-43-%E7%AB%A0%EF%BC%89/</id>
    <published>2024-01-17T05:51:00.000Z</published>
    <updated>2025-03-31T07:59:32.009Z</updated>
    
    
    <summary type="html">书接上回，本文是第 39-43 章的笔记。内容基于自身情况记录，仅供参考，Dialogue 的相关章节已略过。</summary>
    
    
    
    
    <category term="OS" scheme="https://www.hangyu.site/tags/OS/"/>
    
    <category term="操作系统" scheme="https://www.hangyu.site/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>《Operating Systems: Three Easy Pieces》读书笔记（第 30-38 章）</title>
    <link href="https://www.hangyu.site/2024/01/11/%E3%80%8AOperating-Systems-Three-Easy-Pieces%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E7%AC%AC-30-38-%E7%AB%A0%EF%BC%89/"/>
    <id>https://www.hangyu.site/2024/01/11/%E3%80%8AOperating-Systems-Three-Easy-Pieces%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E7%AC%AC-30-38-%E7%AB%A0%EF%BC%89/</id>
    <published>2024-01-11T09:12:00.000Z</published>
    <updated>2025-03-31T07:59:32.007Z</updated>
    
    
    <summary type="html">书接上回，本文是第 30-38 章的笔记。内容基于自身情况记录，仅供参考，Dialogue 的相关章节已略过。</summary>
    
    
    
    
    <category term="OS" scheme="https://www.hangyu.site/tags/OS/"/>
    
    <category term="操作系统" scheme="https://www.hangyu.site/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>TypeScript Cheat Sheet</title>
    <link href="https://www.hangyu.site/2023/12/23/TypeScript-Cheat-Sheet/"/>
    <id>https://www.hangyu.site/2023/12/23/TypeScript-Cheat-Sheet/</id>
    <published>2023-12-23T14:13:00.000Z</published>
    <updated>2025-03-31T07:59:31.896Z</updated>
    
    
    <summary type="html">TypeScript cheat sheet, for quick reference only.</summary>
    
    
    
    
    <category term="TypeScript" scheme="https://www.hangyu.site/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>WebAssembly - GC v1 Extension</title>
    <link href="https://www.hangyu.site/2023/11/10/WebAssembly-GC-V1-Extension/"/>
    <id>https://www.hangyu.site/2023/11/10/WebAssembly-GC-V1-Extension/</id>
    <published>2023-11-10T08:05:00.000Z</published>
    <updated>2025-03-31T07:59:31.901Z</updated>
    
    
    <summary type="html">本篇来看的提案是 - “GC v1 Extension”。该提案为 Wasm 提供了 v1 版垃圾回收机制（GC）的支持，相关概念的实现基于前述提案 “Reference Types” 以及 “Typed Function Reference”。WasmGC 是自 Wasm MVP 标准发布以来的一次重大更新，它为托管类编程语言（如 Kotlin、PHP 等）提供了可以直接利用宿主 GC 的能力。</summary>
    
    
    
    
    <category term="WebAssembly" scheme="https://www.hangyu.site/tags/WebAssembly/"/>
    
  </entry>
  
  <entry>
    <title>WebAssembly - Threading</title>
    <link href="https://www.hangyu.site/2023/11/09/WebAssembly-Threading/"/>
    <id>https://www.hangyu.site/2023/11/09/WebAssembly-Threading/</id>
    <published>2023-11-09T07:39:00.000Z</published>
    <updated>2025-03-31T07:59:31.908Z</updated>
    
    
    <summary type="html">本篇来看的提案是 - “Threading”。该提案为 Wasm 提供了用于支持多线程处理的相关概念和指令，包括可以被多个模块实例共享的 “shared memory”；用于操作内存的原子指令；用于线程等待和唤醒的 `wait` 与 `notify` 指令；以及与内存序相关的 `fence` 指令等。Wasm 的多线程模型实现依赖于其所处的具体执行环境，比如在 Web 环境中，线程即对应 worker。</summary>
    
    
    
    
    <category term="WebAssembly" scheme="https://www.hangyu.site/tags/WebAssembly/"/>
    
  </entry>
  
  <entry>
    <title>WebAssembly - Typed Function References</title>
    <link href="https://www.hangyu.site/2023/11/08/WebAssembly-Typed-Function-References/"/>
    <id>https://www.hangyu.site/2023/11/08/WebAssembly-Typed-Function-References/</id>
    <published>2023-11-08T09:52:00.000Z</published>
    <updated>2025-03-31T07:59:31.908Z</updated>
    
    
    <summary type="html">本篇来看的提案是 - “Typed Function References”，该提案在 “Reference Types” 提案的基础上为 funcref 增加了类型信息，使得基于引用的函数调用变得更加方便，同时也支持 GC 提案的正确实现。</summary>
    
    
    
    
    <category term="WebAssembly" scheme="https://www.hangyu.site/tags/WebAssembly/"/>
    
  </entry>
  
  <entry>
    <title>WebAssembly - Multiple Memories</title>
    <link href="https://www.hangyu.site/2023/11/07/WebAssembly-Multiple-Memories/"/>
    <id>https://www.hangyu.site/2023/11/07/WebAssembly-Multiple-Memories/</id>
    <published>2023-11-07T09:52:00.000Z</published>
    <updated>2025-03-31T07:59:31.902Z</updated>
    
    
    <summary type="html">本篇来看的提案是 - “Multiple Memories”。该提案为 Wasm 提供了多内存段（memory section）支持。</summary>
    
    
    
    
    <category term="WebAssembly" scheme="https://www.hangyu.site/tags/WebAssembly/"/>
    
  </entry>
  
  <entry>
    <title>WebAssembly - Extended Constant Expressions</title>
    <link href="https://www.hangyu.site/2023/11/07/WebAssembly-Extended-Constant-Expressions/"/>
    <id>https://www.hangyu.site/2023/11/07/WebAssembly-Extended-Constant-Expressions/</id>
    <published>2023-11-07T08:04:00.000Z</published>
    <updated>2025-03-31T07:59:31.901Z</updated>
    
    
    <summary type="html">本篇来看的提案是 - “Extended Constant Expressions”。该提案增加了更多可以应用在 Wasm 常量表达式中的常量指令。</summary>
    
    
    
    
    <category term="WebAssembly" scheme="https://www.hangyu.site/tags/WebAssembly/"/>
    
  </entry>
  
  <entry>
    <title>WebAssembly - Tail Call Extension</title>
    <link href="https://www.hangyu.site/2023/11/06/WebAssembly-Tail-Call-Extension/"/>
    <id>https://www.hangyu.site/2023/11/06/WebAssembly-Tail-Call-Extension/</id>
    <published>2023-11-06T11:14:00.000Z</published>
    <updated>2025-03-31T07:59:31.908Z</updated>
    
    
    <summary type="html">本篇来看的提案是 - “Tail Call Extension”。尾递归优化（TCE）相信大家都很熟悉，这是一种常见的“递归转循环”优化，可以消除函数递归调用过程中产生的栈帧，以实现更快的计算过程。</summary>
    
    
    
    
    <category term="WebAssembly" scheme="https://www.hangyu.site/tags/WebAssembly/"/>
    
  </entry>
  
  <entry>
    <title>WebAssembly - Relaxed SIMD</title>
    <link href="https://www.hangyu.site/2023/11/05/WebAssembly-Relaxed-SIMD/"/>
    <id>https://www.hangyu.site/2023/11/05/WebAssembly-Relaxed-SIMD/</id>
    <published>2023-11-05T14:00:00.000Z</published>
    <updated>2025-03-31T07:59:31.903Z</updated>
    
    
    <summary type="html">本篇来看的提案是 - “Relaxed SIMD”。今天要介绍的这个提案在原始 SIMD 提案的基础上又增加了若干指令，不同的是，这些指令根据执行引擎运行所在平台的不同，可能具有不确定（non-deterministic）的执行结果。</summary>
    
    
    
    
    <category term="WebAssembly" scheme="https://www.hangyu.site/tags/WebAssembly/"/>
    
  </entry>
  
  <entry>
    <title>WebAssembly - 128-bit Packed SIMD Extension</title>
    <link href="https://www.hangyu.site/2023/11/04/WebAssembly-128-bit-packed-SIMD-Extension/"/>
    <id>https://www.hangyu.site/2023/11/04/WebAssembly-128-bit-packed-SIMD-Extension/</id>
    <published>2023-11-04T11:42:00.000Z</published>
    <updated>2025-03-31T07:59:31.901Z</updated>
    
    
    <summary type="html">今天来看的提案是 - “128-bit Packed SIMD Extension”。Wasm 在设计之初的一个重要目标就是提供 “near native” 的指令执行效率，而该提案则通过提供一组通用 Wasm SIMD 指令集，使得 Wasm 可以直接利用现代处理器上的硬件 SIMD 指令来执行更高效的并行算数运算。该能力被广泛应用于多媒体和游戏等领域。</summary>
    
    
    
    
    <category term="WebAssembly" scheme="https://www.hangyu.site/tags/WebAssembly/"/>
    
  </entry>
  
  <entry>
    <title>WebAssembly - Bulk Memory Operations and Conditional Segment Initialization</title>
    <link href="https://www.hangyu.site/2023/11/03/WebAssembly-Bulk-Memory-Operations-and-Conditional-Segment-Initialization/"/>
    <id>https://www.hangyu.site/2023/11/03/WebAssembly-Bulk-Memory-Operations-and-Conditional-Segment-Initialization/</id>
    <published>2023-11-03T03:32:00.000Z</published>
    <updated>2025-03-31T07:59:31.901Z</updated>
    
    
    <summary type="html">今天来看的提案是 - “Bulk Memory Operations and Conditional Segment Initialization”。该提案提供了更高效的线性内存和 Table 操作指令（类似于某种 “super instruction”），以及针对两者的条件初始化能力。</summary>
    
    
    
    
    <category term="WebAssembly" scheme="https://www.hangyu.site/tags/WebAssembly/"/>
    
  </entry>
  
  <entry>
    <title>WebAssembly - Reference Types</title>
    <link href="https://www.hangyu.site/2023/11/02/WebAssembly-Reference-Types/"/>
    <id>https://www.hangyu.site/2023/11/02/WebAssembly-Reference-Types/</id>
    <published>2023-11-02T13:14:00.000Z</published>
    <updated>2025-03-31T07:59:31.903Z</updated>
    
    
    <summary type="html">今天来看的提案是 - “Reference Types”。从标准上看，该提案主要新增了一种类型 externref，可用于在 Wasm 模块内引用宿主环境中的“不透明（opaque）”值类型，该类型既可作为普通的值类型，也可作为 WebAssembly Table（后简称 “table”）的元素类型。除此之外，提案还补充了用于操作 table 的更多指令，同时支持了多重 table。</summary>
    
    
    
    
    <category term="WebAssembly" scheme="https://www.hangyu.site/tags/WebAssembly/"/>
    
  </entry>
  
  <entry>
    <title>WebAssembly - JavaScript BigInt to WebAssembly i64 Integration</title>
    <link href="https://www.hangyu.site/2023/11/02/WebAssembly-JavaScript-BigInt-to-WebAssembly-i64-integration/"/>
    <id>https://www.hangyu.site/2023/11/02/WebAssembly-JavaScript-BigInt-to-WebAssembly-i64-integration/</id>
    <published>2023-11-02T03:32:00.000Z</published>
    <updated>2025-03-31T07:59:31.902Z</updated>
    
    
    <summary type="html">今天来看的提案是 - “JavaScript BigInt to WebAssembly i64 Integration”。该提案支持了 JavaScript 中 BigInt 类型与 Wasm i64 类型的双向转换。</summary>
    
    
    
    
    <category term="WebAssembly" scheme="https://www.hangyu.site/tags/WebAssembly/"/>
    
  </entry>
  
  <entry>
    <title>WebAssembly - Multi-value Extension</title>
    <link href="https://www.hangyu.site/2023/11/01/WebAssembly-Multi-value-Extension/"/>
    <id>https://www.hangyu.site/2023/11/01/WebAssembly-Multi-value-Extension/</id>
    <published>2023-11-01T14:50:00.000Z</published>
    <updated>2025-03-31T07:59:31.902Z</updated>
    
    
    <summary type="html">今天来看的提案是 - “Multi-value Extension”。该提案对 MVP 中原有的函数类型，以及 block、loop、if 三种块结构的能力进行了扩展，使它们可以接收多个输入参数，或产生多个结果值。这增加了指令的灵活性，使其拥有更贴近高级语言特性的指令执行流。</summary>
    
    
    
    
    <category term="WebAssembly" scheme="https://www.hangyu.site/tags/WebAssembly/"/>
    
  </entry>
  
  <entry>
    <title>WebAssembly - Sign-extension Operators</title>
    <link href="https://www.hangyu.site/2023/11/01/WebAssembly-Sign-extension-operators/"/>
    <id>https://www.hangyu.site/2023/11/01/WebAssembly-Sign-extension-operators/</id>
    <published>2023-11-01T10:13:00.000Z</published>
    <updated>2025-03-31T07:59:31.903Z</updated>
    
    
    <summary type="html">今天来看的提案是 - “Sign-extension Operators”。该提案设计了一组新的指令，用于支持整数类型的符号扩展。</summary>
    
    
    
    
    <category term="WebAssembly" scheme="https://www.hangyu.site/tags/WebAssembly/"/>
    
  </entry>
  
  <entry>
    <title>WebAssembly - Non-trapping Float-to-int Conversions</title>
    <link href="https://www.hangyu.site/2023/11/01/WebAssembly-Non-trapping-Float-to-int-Conversions/"/>
    <id>https://www.hangyu.site/2023/11/01/WebAssembly-Non-trapping-Float-to-int-Conversions/</id>
    <published>2023-11-01T09:18:00.000Z</published>
    <updated>2025-03-31T07:59:31.903Z</updated>
    
    
    <summary type="html">今天来看的提案是 - “Non-trapping Float-to-int Conversions”。该提案设计了一组新的指令，用于支持浮点数到整数的 saturating 转换，这些指令不会导致 trap（可以理解为软中断，常用于处理运行时异常）。</summary>
    
    
    
    
    <category term="WebAssembly" scheme="https://www.hangyu.site/tags/WebAssembly/"/>
    
  </entry>
  
  <entry>
    <title>WebAssembly - Import / Export Mutable Globals Proposal</title>
    <link href="https://www.hangyu.site/2023/10/31/WebAssembly-Import-Export-Mutable-Globals-Proposal/"/>
    <id>https://www.hangyu.site/2023/10/31/WebAssembly-Import-Export-Mutable-Globals-Proposal/</id>
    <published>2023-10-31T13:14:00.000Z</published>
    <updated>2025-03-31T07:59:31.902Z</updated>
    
    
    <summary type="html">好久没关注 Wasm 圈子，从今天起准备开一个文章系列，详细介绍一下 Post-MVP 中那些已经进入 Phase 4 的提案。今天的主角是 - “Import / Export Mutable Globals Proposal”。该提案允许从（向）宿主环境导入（出）“mutable global”。</summary>
    
    
    
    
    <category term="WebAssembly" scheme="https://www.hangyu.site/tags/WebAssembly/"/>
    
  </entry>
  
  <entry>
    <title>《人月神话》读书笔记</title>
    <link href="https://www.hangyu.site/2023/09/05/%E3%80%8A%E4%BA%BA%E6%9C%88%E7%A5%9E%E8%AF%9D%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>https://www.hangyu.site/2023/09/05/%E3%80%8A%E4%BA%BA%E6%9C%88%E7%A5%9E%E8%AF%9D%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</id>
    <published>2023-09-05T14:45:00.000Z</published>
    <updated>2025-03-31T07:59:32.035Z</updated>
    
    
    <summary type="html">很多人推荐的一本书，曾被奉为软件工程领域的“圣经”。书中的内容源于作者 Brooks 博士在 IBM 公司任 System 系列计算机以及其软件系统 OS 项目经理时总结的实践经验。</summary>
    
    
    
    
    <category term="软件工程" scheme="https://www.hangyu.site/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
    <category term="项目管理" scheme="https://www.hangyu.site/tags/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>《Crafting Interpreters》读书笔记（第 11-30 章）</title>
    <link href="https://www.hangyu.site/2023/09/04/%E3%80%8ACrafting-Interpreters%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E7%AC%AC%2011-30%20%E7%AB%A0%EF%BC%89/"/>
    <id>https://www.hangyu.site/2023/09/04/%E3%80%8ACrafting-Interpreters%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E7%AC%AC%2011-30%20%E7%AB%A0%EF%BC%89/</id>
    <published>2023-09-04T09:39:00.000Z</published>
    <updated>2025-03-31T07:59:31.986Z</updated>
    
    
    <summary type="html">书接上文。</summary>
    
    
    
    
    <category term="Compiler" scheme="https://www.hangyu.site/tags/Compiler/"/>
    
    <category term="Interpreter" scheme="https://www.hangyu.site/tags/Interpreter/"/>
    
  </entry>
  
  <entry>
    <title>《Crafting Interpreters》读书笔记（第 1-10 章）</title>
    <link href="https://www.hangyu.site/2023/07/18/%E3%80%8ACrafting-Interpreters%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E7%AC%AC%201-10%20%E7%AB%A0%EF%BC%89/"/>
    <id>https://www.hangyu.site/2023/07/18/%E3%80%8ACrafting-Interpreters%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E7%AC%AC%201-10%20%E7%AB%A0%EF%BC%89/</id>
    <published>2023-07-18T03:25:00.000Z</published>
    <updated>2025-03-31T07:59:31.985Z</updated>
    
    
    <summary type="html">这本《Crafting Interpreters》实际上几年前就发现并且收藏了，直到昨天看了作者 Robert Nystrom 的博客后才想起来。Robert 去年刚过而立之年，目前在 Google 从事 Dart 语言的研发工作。我对好书没有抵抗力，立马放下手头的其他书和项目，来感受一下优秀人的文字魅力。后记：龙书是编译入门的理论圣经，这本书可以算是编译入门的实践宝典，好书。</summary>
    
    
    
    
    <category term="Compiler" scheme="https://www.hangyu.site/tags/Compiler/"/>
    
    <category term="Interpreter" scheme="https://www.hangyu.site/tags/Interpreter/"/>
    
  </entry>
  
  <entry>
    <title>关于 C++ Stack Unwinding 的一点记录</title>
    <link href="https://www.hangyu.site/2023/07/13/%E5%85%B3%E4%BA%8E-C++-Stack-Unwinding-%E7%9A%84%E4%B8%80%E7%82%B9%E8%AE%B0%E5%BD%95/"/>
    <id>https://www.hangyu.site/2023/07/13/%E5%85%B3%E4%BA%8E-C++-Stack-Unwinding-%E7%9A%84%E4%B8%80%E7%82%B9%E8%AE%B0%E5%BD%95/</id>
    <published>2023-07-13T09:57:00.000Z</published>
    <updated>2025-03-31T07:59:32.069Z</updated>
    
    
    <summary type="html">这篇文章整理了一些关于 C++ Stack Unwinding 的内容。</summary>
    
    
    
    
    <category term="Cpp" scheme="https://www.hangyu.site/tags/Cpp/"/>
    
  </entry>
  
  <entry>
    <title>《Unix 环境高级编程（第三版）》读书笔记（第 1-5 章）</title>
    <link href="https://www.hangyu.site/2023/07/04/%E3%80%8AUnix-%E7%8E%AF%E5%A2%83%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%EF%BC%88%E7%AC%AC3%E7%89%88%EF%BC%89%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E7%AC%AC-1-5-%E7%AB%A0%EF%BC%89/"/>
    <id>https://www.hangyu.site/2023/07/04/%E3%80%8AUnix-%E7%8E%AF%E5%A2%83%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%EF%BC%88%E7%AC%AC3%E7%89%88%EF%BC%89%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E7%AC%AC-1-5-%E7%AB%A0%EF%BC%89/</id>
    <published>2023-07-04T07:55:00.000Z</published>
    <updated>2025-03-31T07:59:32.023Z</updated>
    
    
    <summary type="html">继续整理书架上的经典老书。</summary>
    
    
    
    
    <category term="Unix" scheme="https://www.hangyu.site/tags/Unix/"/>
    
  </entry>
  
  <entry>
    <title>《穿越计算机的迷雾（第二版）》读书笔记</title>
    <link href="https://www.hangyu.site/2023/06/18/%E3%80%8A%E7%A9%BF%E8%B6%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E8%BF%B7%E9%9B%BE%EF%BC%88%E7%AC%AC2%E7%89%88%EF%BC%89%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>https://www.hangyu.site/2023/06/18/%E3%80%8A%E7%A9%BF%E8%B6%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E8%BF%B7%E9%9B%BE%EF%BC%88%E7%AC%AC2%E7%89%88%EF%BC%89%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</id>
    <published>2023-06-18T01:14:00.000Z</published>
    <updated>2025-03-31T07:59:32.057Z</updated>
    
    
    <summary type="html">李忠老师的另一大作。本书以“电”为始，到加法器，再到晶体管，逐步从历史发展的角度介绍了计算机的基本演化方式，是一本不错的科普书籍。</summary>
    
    
    
    
    <category term="计算机" scheme="https://www.hangyu.site/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Node.js Internal</title>
    <link href="https://www.hangyu.site/2023/06/05/Nodejs-Internal/"/>
    <id>https://www.hangyu.site/2023/06/05/Nodejs-Internal/</id>
    <published>2023-06-05T02:38:00.000Z</published>
    <updated>2025-03-31T07:59:31.889Z</updated>
    
    
    <summary type="html">开篇文章记录下有关 Node.js 的一些内容（不定期更新）。</summary>
    
    
    
    
    <category term="Node.js" scheme="https://www.hangyu.site/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>《x86 汇编语言：从实模式到保护模式（第二版）》读书笔记（第 12-20 章）</title>
    <link href="https://www.hangyu.site/2023/06/03/%E3%80%8Ax86-%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%EF%BC%9A%E4%BB%8E%E5%AE%9E%E6%A8%A1%E5%BC%8F%E5%88%B0%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F%EF%BC%88%E7%AC%AC2%E7%89%88%EF%BC%89%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E7%AC%AC-12-20-%E7%AB%A0%EF%BC%89/"/>
    <id>https://www.hangyu.site/2023/06/03/%E3%80%8Ax86-%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%EF%BC%9A%E4%BB%8E%E5%AE%9E%E6%A8%A1%E5%BC%8F%E5%88%B0%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F%EF%BC%88%E7%AC%AC2%E7%89%88%EF%BC%89%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E7%AC%AC-12-20-%E7%AB%A0%EF%BC%89/</id>
    <published>2023-06-03T14:03:00.000Z</published>
    <updated>2025-03-31T07:59:32.029Z</updated>
    
    
    <summary type="html">书接上文。</summary>
    
    
    
    
    <category term="汇编" scheme="https://www.hangyu.site/tags/%E6%B1%87%E7%BC%96/"/>
    
    <category term="x86" scheme="https://www.hangyu.site/tags/x86/"/>
    
    <category term="x64" scheme="https://www.hangyu.site/tags/x64/"/>
    
  </entry>
  
</feed>
