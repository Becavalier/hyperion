//- index page;
if is_home()
  h4.page-title Recent Articles
  div.content
  each post, index in site.posts.sort('date', 'desc').toArray()
    if (index < config.index_generator.per_page)
      a.article(href=config.root + post.path)
        article.item(itemscope, itemprop='blogPost', itemtype='https://schema.org/BlogPosting')
          div.post-intro
            h2(itemprop='headline')=post.title
            span.post-meta
              | Published on
              time(itemprop='datePublished', datetime=post.date.toISOString())=full_date(new Date(post.date), ' YYYY / MM / DD, HH:mm:ss')
            p(itemprop='text').post-excerpt=post.intro ? post.intro : post.content.replace(/<(?:.|\n)*?>/gm, '').substr(0, 220)
  h4.page-title See more? Please refer to the "Articles" page : )

//- articles page;
if is_page() && page.title.toLowerCase() === 'articles'
  article.full.posts
    h1(itemprop='headline')=page.label + '（' + site.posts.length + '）'
      a(href=config.root + 'search/')
        i(class='fa fa-search')
    div.content
      - let lastyear = 0
      for post, index in site.posts.sort('date', 'desc').toArray()
        if lastyear !== post.date.format('YYYY')
          if index !== 0
            | </ul></div>
          - lastyear = post.date.format('YYYY')
          - count = site.posts.reduce((p, v) => (p + Number(v.date.format('YYYY') === lastyear)), 0)
          | <div class="year-group">
          div
            span.sticky=lastyear
            span.line
          | <ul class="catelog-items">
          li(itemprop='title')
            time(itemprop='datePublished', datetime=post.date.toISOString())=full_date(new Date(post.date), 'MM/DD')
            |&nbsp;|&nbsp;
            a(target="_blank", href=config.root + post.path, itemprop='url') #{post.title}
            if (post.tags.data !== undefined && post.tags.data.length > 0)
              | &nbsp;&mdash;&nbsp;&nbsp;
              span(itemprop='category')
                for tag in post.tags.data
                  a(href=config.root + 'tags/' + tag.name, itemprop='url') #{'#' + tag.name} &nbsp;
        else
          li(itemprop='title')
            time(itemprop='datePublished', datetime=post.date.toISOString())=full_date(new Date(post.date), 'MM/DD')
            |&nbsp;|&nbsp;
            a(target="_blank", href=config.root + post.path) #{post.title}
            if (post.tags.data !== undefined && post.tags.data.length > 0)
              | &nbsp;&mdash;&nbsp;&nbsp;
              span(itemprop='category')
                for tag in post.tags.data
                  a(href=config.root + 'tags/' + tag.name, itemprop='url') #{'#' + tag.name} &nbsp;
      if site.posts.toArray().length !== 0
        | </ul></div>
else if is_page() && page.title.toLowerCase() === 'about'
  article.full.about
    h1(itemprop='headline')=page.label
    div.about-container
      div.avatar
      if (config.about !== undefined)
        div.avatar-name
          span
            | #{config.about.name}
        for intro in config.about.intros
          div.avatar-description
            span
              | !{intro}
        if (config.about.skills !== undefined)
          .avatar-skills-block
            for skill in config.about.skills.split(', ')
              .avatar-skills
                span
                  | #{skill}
      br
      div.social-container
        if (config.about.linkedin !== undefined)
          a(target="_blank", href=config.about.linkedin)
            span(class="fa fa-linkedin icons" aria-hidden="true")
        if (config.about.facebook !== undefined)
          a(target="_blank", href=config.about.facebook)
            span(class="fa fa-facebook icons" aria-hidden="true")
        if (config.about.twitter !== undefined)
          a(target="_blank", href=config.about.twitter)
            span(class="fa fa-twitter icons" aria-hidden="true")
        if (config.about.instagram !== undefined)
          a(target="_blank", href=config.about.instagram)
            span(class="fa fa-instagram icons" aria-hidden="true")
        if (config.about.email !== undefined)
          a(href="mailto:" + config.about.email)
            span(class="fa fa-envelope icons" aria-hidden="true")
        if (config.about.github !== undefined)
          a(target="_blank", href=config.about.github)
            span(class="fa fa-github icons" aria-hidden="true")
        if (config.about.stackoverflow !== undefined)
          a(target="_blank", href=config.about.stackoverflow)
            span(class="fa fa-stack-overflow icons" aria-hidden="true")
        if (config.about.sourceforge !== undefined)
          a(target="_blank", href=config.about.sourceforge)
            span(class="fa fa-noicon icons no-icons" aria-hidden="true")
        if (config.about.resume !== undefined)
          a(target="_blank", href=config.about.resume)
            span(class="fa fa-id-card icons" aria-hidden="true")
      div.extra-container
        a(target="_blank", href=config.about.interview_sheet)
          span(class="fa fa-sticky-note icons" aria-hidden="true")
else if is_page() && page.title.toLowerCase() === 'cards'
  article.full.cards-page
    h1(itemprop='headline', class='header')=page.label
    - const [defaultPage] = site.pages.filter(i => i.page === 'cards').data
    div.content
      span(class="meta")='这里是我的快记，所有的卡片信息会放在这里。'
      for card in defaultPage.cards
        span.hidden-anchor(id=card.title)
          != card.head
        div.container
          div.title
            != card.title
          for content in card.content 
            div.snippet 
              != content
              div.arrow
else if is_page() && page.title.toLowerCase() === 'readings'
  article.full.readings-page
    - const readingPosts = site.pages.filter(i => i.page === 'readings')
    h1(itemprop='headline', class='header')=page.label + '（' + readingPosts.length + '）'
    div.content
      span(class="meta")='这里是我的已读书单，有些笔记可以在“文章”里找到。标题前面的个人打分仅供参考。'
      each val, key in readingPosts.reduce((prev, curr) => { const tag = curr.tags.join(', '); if(!prev[tag]) { prev[tag] = [] } prev[tag].push(curr); return prev; }, {})
        h5='- ' + key
        ul.book-list
          for book in val.sort((x, y) => y.date - x.date)
            li
              span(class="score")=book.score
              | &nbsp;-
              a(target="_blank", href=book.douban)=book.title + '：'
                span(class="comment")=book.comment
                =' — ' + full_date(new Date(book.date), 'MM / YYYY')
else if is_page() && page.title.toLowerCase() === 'search'
  script(src=config.root + 'scripts/search.js?endpoint=' + (config.algolia ? 'algolia' : 'node'), type='text/javascript')
  article.full.search-page
    h1(itemprop='headline')=page.label
    div.content
      div(class='search-container')
        input(class='input-search', autofocus, type='search', placeholder="请输入要搜索的内容 ...")
        button.submit-search
          | 搜索
      div.no-result
        i(class="fa fa-battery-empty")
          | &nbsp;&nbsp;暂无相关内容 T T
      div(class='search-result-container' data-type='Post')
    
else if is_post()
  script(src='https://shadow.elemecdn.com/npm/zoomage.js@latest/dist/zoomage.min.js', type='text/javascript')
  script(src='https://shadow.elemecdn.com/npm/axios@0.18.0/dist/axios.min.js', type='text/javascript')
  script(src=config.root + 'scripts/post.js', type='text/javascript')
  div.touch-top
    span
  article(post-id=page.title).full.article-post
    h1(itemprop='headline', class='align-center')=page.title
    div.content
      div.article-meta
        span.post-meta
          if page.updated
            br
            | Created on
            time(itemprop='dateCreated', datetime=page.date.toISOString())=full_date(new Date(page.date), ' YYYY / MM / DD, HH:mm:ss')
        span(class='page-tag-anchor')
          for tag in page.tags.data
            a(href=config.root + 'tags/' + tag.name, itemprop='url') #{'#' + tag.name}
            | &nbsp;&nbsp;
      !=page.content
      br
      div.article-bottom-meta
        span.post-meta
          | Last built on
          time(itemprop='dateModified', datetime=page.date.toISOString())=full_date(new Date(page.updated), ' YYYY / MM / DD, HH:mm:ss')
  br
  if page.prev
    span(class='next-post')
      a(href=config.root + page.prev.path, itemprop='url') #{ '下一篇 ⇒'}
  if page.next
    span(class='prev-post')
      a(href=config.root + page.next.path, itemprop='url') #{ '⇐ 上一篇'}
  br
  if page.comments
    section#comments
      h4
        | 评论 | Comments
      br
      div.comment-container
        div.loading-mask
          | Loading ...
        script(src='https://utteranc.es/client.js' repo='Becavalier/utterances-comments' issue-term='title' label='[Comment]' theme='github-light' crossorigin='anonymous' async)
  br
  br
else if is_tag()
  article.full
    h1(itemprop='headline')='tag：' + page.tag
    !=page.content
    - let lastyear = 0
    - const tagPosts = site.tags.findOne({ name: page.tag }).posts
    for post, index in tagPosts.sort('date', 'desc').toArray()
      if lastyear !== post.date.format('YYYY')
        if index !== 0
          | </ul>
        - lastyear = post.date.format('YYYY')
        h4=lastyear
        | <ul class="catelog-items">
        li(itemprop='name')
          time(itemprop='datePublished', datetime=post.date.toISOString())=full_date(new Date(post.date), 'MM/DD')
          |&nbsp;|&nbsp;
          a(target="_blank", href=config.root + post.path, itemprop='url') #{post.title}
          |  &nbsp; &mdash; &nbsp;&nbsp;
          for tag in post.tags.data
            a(href=config.root + 'tags/' + tag.name, itemprop='url') #{'#'+tag.name}
            | &nbsp;&nbsp;
      else
        li
          time(itemprop='datePublished', datetime=post.date.toISOString())=full_date(new Date(post.date), 'MM/DD')
          |&nbsp;|&nbsp;
          a(target="_blank", href=config.root + post.path) #{post.title}
          |  &nbsp; &mdash; &nbsp;&nbsp;
          for tag in post.tags.data
            a(href=config.root + 'tags/' + tag.name, itemprop='url') #{'#'+tag.name}
            | &nbsp;&nbsp;
    | </ul>
else if is_page() && page.title.toLowerCase() === 'tags'
  article.full
    h1(itemprop='headline')=page.label
    div.tag-item
      for tag in site.tags.data
        a(href=config.root + 'tags/' + tag.name, itemprop='url') #{'#'+tag.name}
else if is_page()
  article.full
    br
    br
    br
    br
    h3="Nothing is here (404) :( "
    h6="Click "
      a(href=config.root, itemprop='url')
        | "here" 
      | to take you home.
